  BIG O(log n) array = n;  
  
  Change the value to ASCII CODE
  
  public static int binarySearch(final int[] array, final int []targetElement) {
    Hashset result = new Hashset();//retsult
    
    for(int i = 0;i<targetElement.length;i++){
      int start = 0;
      int end = array.length - 1;
      
      while (end >= start) {
        final int middle = (end + start) >>> 1;
 
        if (targetElement == array[middle] ) {
            result.put(targetElement[j]);
        } else if (targetElement > array[middle]) {
            start = middle + 1;
        } else {
            end = middle - 1;
        }
      }
    }
}

 if(result.size() == targetElement.length) return true; else false;


BIG O(n*n) array = n;  

 public static int binarySearch(final int[] array, final int []targetElement) {
 
    Hashset result = new Hashset();//retsult
   
    for(int i = 0;i<array.length ;i++){
      YN = false;
      for(int j = 0;j<targetElement;j++){
        if(array[i].equals(targetElement[j])){
          result.put(targetElement[j]);
        }
      }
    }
    
    if(result.size() == targetElement.length) return true; else false;
    
}


BIG O (log) better than BIG O (n*n)
